name: Build and Release

on:
  push:
    branches:
    - main
    paths:
    - "tools/imports/**"

jobs:
  build:
    runs-on: ubuntu-latest

    concurrency:
      group: build-and-release-${{ github.ref }}
      cancel-in-progress: true

    steps:
    # Step 1: Add a delay (sleep for 1 hour = 3600 seconds)
    - name: Wait for 15 mintues
      run: sleep 10

    # Step 2: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 3: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    # Step 4: Check if tag already exists without a release
    - name: Check existing tags
      id: tag_check
      run: |
        DATE=$(date +'%Y%m%d')
        # List all tags matching the date
        EXISTING_TAGS=$(git tag --list "$DATE-*")
        # Loop through existing tags and check for releases
        TAG_TO_USE=""
        for TAG in $EXISTING_TAGS; do
          RELEASE_COUNT=$(gh release view $TAG --json tagName --jq '.tagName' | wc -l || true)
          if [[ $RELEASE_COUNT -eq 0 ]]; then
            TAG_TO_USE=$TAG
            break
          fi
        done
        if [[ -z "$TAG_TO_USE" ]]; then
          # If no tag without a release was found, create a new one
          COUNT=$(echo "$EXISTING_TAGS" | wc -l)
          TAG_TO_USE="$DATE-$((COUNT+1))"
        fi
        echo "tag=$TAG_TO_USE" >> $GITHUB_ENV

    - name: Run build.py
      # Step 5: Run the Python build script
      run: python tools/build.py

    # Step 6: Zip the QuaziiUIInstaller directory
    - name: Zip QuaziiUIInstaller
      run: zip -r QuaziiUI.zip QuaziiUI

    # Step 7: Create or update a GitHub Release
    - name: Create or Update GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.tag }}
        release_name: QuaziiUIInstaller ${{ env.tag }}
        draft: false
        prerelease: false

    # Step 8: Upload the zipped file as release asset
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.tag_check.outputs.upload_url }}
        asset_path: QuaziiUIInstaller.zip
        asset_name: QuaziiUIInstaller.zip
        asset_content_type: application/zip
